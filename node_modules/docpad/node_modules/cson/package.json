{
  "title": "CSON",
  "name": "cson",
  "version": "3.0.1",
  "description": "CoffeeScript-Object-Notation Parser. Same as JSON but for CoffeeScript objects.",
  "homepage": "https://github.com/bevry/cson",
  "license": {
    "type": "MIT"
  },
  "badges": {
    "travis": true,
    "npm": true,
    "npmdownloads": true,
    "david": true,
    "daviddev": true,
    "gratipay": "bevry",
    "flattr": "344188/balupton-on-Flattr",
    "paypal": "QB8GQPZAH84N6",
    "bitcoin": "https://coinbase.com/checkouts/9ef59f5479eec1d97d63382c9ebcb93a",
    "wishlist": "http://amzn.com/w/2F8TXKSNAFG4V"
  },
  "keywords": [
    "javascript",
    "coffeescript",
    "json",
    "cson",
    "parse",
    "stringify"
  ],
  "author": {
    "name": "2012+ Bevry Pty Ltd",
    "email": "us@bevry.me",
    "url": "http://bevry.me"
  },
  "maintainers": [
    {
      "name": "Benjamin Lupton",
      "email": "b@lupton.cc",
      "url": "https://github.com/balupton"
    }
  ],
  "contributors": [
    {
      "name": "attilaolah",
      "url": "https://github.com/attilaolah"
    },
    {
      "name": "Benjamin Lupton",
      "email": "b@lupton.cc",
      "url": "https://github.com/balupton"
    },
    {
      "name": "evinugur",
      "url": "https://github.com/evinugur"
    },
    {
      "name": "jasonkarns",
      "url": "https://github.com/jasonkarns"
    },
    {
      "name": "Joel Perras",
      "email": "joel.perras@gmail.com",
      "url": "https://github.com/jperras"
    },
    {
      "name": "Linus G Thiel",
      "email": "linus@hanssonlarsson.se",
      "url": "https://github.com/linus"
    },
    {
      "name": "nanuclickity",
      "url": "https://github.com/nanuclickity"
    },
    {
      "name": "Nicolae Claudius",
      "email": "claudius.nicolae@gmail.com",
      "url": "https://github.com/clyfe"
    },
    {
      "name": "RobLoach",
      "url": "https://github.com/RobLoach"
    },
    {
      "name": "Ryan LeFevre",
      "email": "meltingice8917@gmail.com",
      "url": "https://github.com/meltingice"
    },
    {
      "name": "Zearin",
      "url": "https://github.com/Zearin"
    },
    {
      "name": "Zhang Cheng",
      "email": "czhang.oss@gmail.com",
      "url": "https://github.com/zhangcheng"
    }
  ],
  "bugs": {
    "url": "https://github.com/bevry/cson/issues"
  },
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/bevry/cson.git"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "dependencies": {
    "coffee-script": "~1.9.0",
    "cson-parser": "^1.0.6",
    "extract-opts": "^3.0.1",
    "requirefresh": "^2.0.0",
    "safefs": "^3.1.2"
  },
  "devDependencies": {
    "biscotto": "^2.3.1",
    "assert-helpers": "^1.0.1",
    "joe": "^1.6.0",
    "joe-reporter-console": "^1.2.1",
    "projectz": "^0.5.0",
    "safeps": "^2.2.12"
  },
  "directories": {
    "lib": "./out/lib"
  },
  "scripts": {
    "test": "node ./out/test/cson-test.js"
  },
  "bin": {
    "cson2json": "./bin/cson2json",
    "json2cson": "./bin/json2cson"
  },
  "main": "./out/lib/cson",
  "cakeConfiguration": {
    "COFFEE_SRC_PATH": "src",
    "BISCOTTO_SRC_PATH": "src"
  },
  "readme": "<!-- TITLE/ -->\n\n# CSON\n\n<!-- /TITLE -->\n\n\n<!-- BADGES/ -->\n\n[![Build Status](https://img.shields.io/travis/bevry/cson/master.svg)](http://travis-ci.org/bevry/cson \"Check this project's build status on TravisCI\")\n[![NPM version](https://img.shields.io/npm/v/cson.svg)](https://npmjs.org/package/cson \"View this project on NPM\")\n[![NPM downloads](https://img.shields.io/npm/dm/cson.svg)](https://npmjs.org/package/cson \"View this project on NPM\")\n[![Dependency Status](https://img.shields.io/david/bevry/cson.svg)](https://david-dm.org/bevry/cson)\n[![Dev Dependency Status](https://img.shields.io/david/dev/bevry/cson.svg)](https://david-dm.org/bevry/cson#info=devDependencies)<br/>\n[![Gratipay donate button](https://img.shields.io/gratipay/bevry.svg)](https://www.gratipay.com/bevry/ \"Donate weekly to this project using Gratipay\")\n[![Flattr donate button](https://img.shields.io/badge/flattr-donate-yellow.svg)](http://flattr.com/thing/344188/balupton-on-Flattr \"Donate monthly to this project using Flattr\")\n[![PayPayl donate button](https://img.shields.io/badge/paypal-donate-yellow.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=QB8GQPZAH84N6 \"Donate once-off to this project using Paypal\")\n[![BitCoin donate button](https://img.shields.io/badge/bitcoin-donate-yellow.svg)](https://coinbase.com/checkouts/9ef59f5479eec1d97d63382c9ebcb93a \"Donate once-off to this project using BitCoin\")\n[![Wishlist browse button](https://img.shields.io/badge/wishlist-donate-yellow.svg)](http://amzn.com/w/2F8TXKSNAFG4V \"Buy an item on our wishlist for us\")\n\n<!-- /BADGES -->\n\n\nCoffeeScript-Object-Notation. Same as JSON but for CoffeeScript objects.\n\n[Projects using CSON.](https://www.npmjs.org/browse/depended/cson)\n\n[Projects using CSON Parser directly.](https://www.npmjs.org/browse/depended/cson-parser)\n\n\n<!-- INSTALL/ -->\n\n## Install\n\n### [NPM](http://npmjs.org/)\n- Use: `require('cson')`\n- Install: `npm install --save cson`\n\n<!-- /INSTALL -->\n\n\n## What is CSON?\n\nEveryone knows JSON, it's the thing that looks like this:\n\n``` javascript\n{\n  \"greatDocumentaries\": [\n    \"earthlings.com\",\n    \"forksoverknives.com\",\n    \"cowspiracy.com\"\n  ],\n  \"importantFacts\": {\n    \"emissions\": \"Livestock and their byproducts account for at least 32,000 million tons of carbon dioxide (CO2) per year, or 51% of all worldwide greenhouse gas emissions.\\nGoodland, R Anhang, J. “Livestock and Climate Change: What if the key actors in climate change were pigs, chickens and cows?”\\nWorldWatch, November/December 2009. Worldwatch Institute, Washington, DC, USA. Pp. 10–19.\\nhttp://www.worldwatch.org/node/6294\",\n    \"landuse\": \"Livestock covers 45% of the earth’s total land.\\nThornton, Phillip, Mario Herrero, and Polly Ericksen. “Livestock and Climate Change.” Livestock Exchange, no. 3 (2011).\\nhttps://cgspace.cgiar.org/bitstream/handle/10568/10601/IssueBrief3.pdf\",\n    \"burger\": \"One hamburger requires 660 gallons of water to produce – the equivalent of 2 months’ worth of showers.\\nCatanese, Christina. “Virtual Water, Real Impacts.” Greenversations: Official Blog of the U.S. EPA. 2012.\\nhttp://blog.epa.gov/healthywaters/2012/03/virtual-water-real-impacts-world-water-day-2012/\\n“50 Ways to Save Your River.” Friends of the River.\\nhttp://www.friendsoftheriver.org/site/PageServer?pagename=50ways\",\n    \"milk\": \"1,000 gallons of water are required to produce 1 gallon of milk.\\n“Water trivia facts.” United States Environmental Protection Agency.\\nhttp://water.epa.gov/learn/kids/drinkingwater/water_trivia_facts.cfm#_edn11\",\n    \"more\": \"http://cowspiracy.com/facts\"\n  }\n}\n```\n\nNow let's write the same thing in CSON:\n\n``` coffeescript\n# Comments!!!\n\n# An Array with no commas!\ngreatDocumentaries: [\n\t'earthlings.com'\n\t'forksoverknives.com'\n\t'cowspiracy.com'\n]\n\n# An Object without braces!\nimportantFacts:\n\t# Multi-Line Strings! Without Quote Escaping!\n\temissions: '''\n\t\tLivestock and their byproducts account for at least 32,000 million tons of carbon dioxide (CO2) per year, or 51% of all worldwide greenhouse gas emissions.\n\t\tGoodland, R Anhang, J. “Livestock and Climate Change: What if the key actors in climate change were pigs, chickens and cows?”\n\t\tWorldWatch, November/December 2009. Worldwatch Institute, Washington, DC, USA. Pp. 10–19.\n\t\thttp://www.worldwatch.org/node/6294\n\t\t'''\n\n\tlanduse: '''\n\t\tLivestock covers 45% of the earth’s total land.\n\t\tThornton, Phillip, Mario Herrero, and Polly Ericksen. “Livestock and Climate Change.” Livestock Exchange, no. 3 (2011).\n\t\thttps://cgspace.cgiar.org/bitstream/handle/10568/10601/IssueBrief3.pdf\n\t\t'''\n\n\tburger: '''\n\t\tOne hamburger requires 660 gallons of water to produce – the equivalent of 2 months’ worth of showers.\n\t\tCatanese, Christina. “Virtual Water, Real Impacts.” Greenversations: Official Blog of the U.S. EPA. 2012.\n\t\thttp://blog.epa.gov/healthywaters/2012/03/virtual-water-real-impacts-world-water-day-2012/\n\t\t“50 Ways to Save Your River.” Friends of the River.\n\t\thttp://www.friendsoftheriver.org/site/PageServer?pagename=50ways\n\t\t'''\n\n\tmilk: '''\n\t\t1,000 gallons of water are required to produce 1 gallon of milk.\n\t\t“Water trivia facts.” United States Environmental Protection Agency.\n\t\thttp://water.epa.gov/learn/kids/drinkingwater/water_trivia_facts.cfm#_edn11\n\t\t'''\n\n\tmore: 'http://cowspiracy.com/facts'\n```\n\nWhich is far more lenient that JSON, way nicer to write and read, no need to quote and escape everything, has comments and readable multi-line strings, and won't fail if you forget a comma.\n\n\n\n## Using CSON\n\n### Via the Command Line\n\nUse CSON with the command line with:\n\n``` bash\n# Convert a JSON file into a CSON file\njson2cson in.json > out.cson\n# Same thing via piping\ncat in.json | json2cson > out.cson\n\n# Convert a CSON file into a JSON file\ncson2json in.cson > out.json\n# Same thing via piping\ncat in.cson | cson2json > out.json\n```\n\nRequires a global CSON install: `npm install -g cson`\n\n\n### Via the API\n\nEach method can be executed without a callback like so:\n\n``` javascript\nresult = require('CSON').createCSONString({a:{b:'c'}}, {/* optional options argument */})\nif ( result instanceof Error ) {\n\tconsole.log(result.stack)\n} else {\n\tconsole.log(result)\n}\n```\n\nOr via a callback like so:\n\n``` javascript\nCSON.createCSONString({a:{b:'c'}}, {/* optional options argument */}, function(err,result){\n\tconsole.log(err, result)\n})\n```\n\nExecuting the method with a callback still executes the method synchronously.\n\nClick the below function names to open more detailed documentation.\n\n\n#### Create Strings\n\n- <a href='http://rawgit.com/bevry/cson/master/docs/classes/CSON.html#stringify-instance'>\nString <strong>CSON.stringify</strong>(data, replacer?, indent?)\n</a> <br/> Converts an <a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object'>Object</a> into a <a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String'>String</a> of the desired format If the format option is not specified, we default to CSON\n\n- <a href='http://rawgit.com/bevry/cson/master/docs/classes/CSON.html#createString-instance'>\nString <strong>CSON.createString</strong>(data, opts?, next?)\n</a> <br/> Converts an <a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object'>Object</a> into a <a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String'>String</a> of the desired format If the format option is not specified, we default to CSON\n\n- <a href='http://rawgit.com/bevry/cson/master/docs/classes/CSON.html#createCSONString-instance'>\nString <strong>CSON.createCSONString</strong>(data, opts?, next?)\n</a> <br/> Converts an <a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object'>Object</a> into a CSON <a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String'>String</a>\n\n- <a href='http://rawgit.com/bevry/cson/master/docs/classes/CSON.html#createJSONString-instance'>\nString <strong>CSON.createJSONString</strong>(data, opts?, next?)\n</a> <br/> Converts an <a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object'>Object</a> into a JSON <a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String'>String</a>\n\n\n### Parse Strings\n\n- <a href='http://rawgit.com/bevry/cson/master/docs/classes/CSON.html#parse-instance'>\nObject <strong>CSON.parse</strong>(data, opts?, next?)\n</a> <br/> Converts a <a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String'>String</a> of the desired format into an <a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object'>Object</a> If the format option is not specified, we default to CSON\n\n- <a href='http://rawgit.com/bevry/cson/master/docs/classes/CSON.html#parseString-instance'>\nObject <strong>CSON.parseString</strong>(data, opts?, next?)\n</a> <br/> Converts a <a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String'>String</a> of the desired format into an <a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object'>Object</a> If the format option is not specified, we default to CSON\n\n- <a href='http://rawgit.com/bevry/cson/master/docs/classes/CSON.html#parseCSONString-instance'>\nObject <strong>CSON.parseCSONString</strong>(data, opts?, next?)\n</a> <br/> Parses a CSON <a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String'>String</a> into an <a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object'>Object</a>\n\n- <a href='http://rawgit.com/bevry/cson/master/docs/classes/CSON.html#parseJSONString-instance'>\nObject <strong>CSON.parseJSONString</strong>(data, opts?, next?)\n</a> <br/> Parses a JSON <a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String'>String</a> into an <a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object'>Object</a>\n\n- <a href='http://rawgit.com/bevry/cson/master/docs/classes/CSON.html#parseCSString-instance'>\nObject <strong>CSON.parseCSString</strong>(data, opts?, next?)\n</a> <br/> Parses a CoffeeScript <a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String'>String</a> into an <a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object'>Object</a>\n\n- <a href='http://rawgit.com/bevry/cson/master/docs/classes/CSON.html#parseJSString-instance'>\nObject <strong>CSON.parseJSString</strong>(data, opts?, next?)\n</a> <br/> Parses a JavaScript <a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String'>String</a> into an <a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object'>Object</a>\n\n#### Parse Files\n\n- <a href='http://rawgit.com/bevry/cson/master/docs/classes/CSON.html#load-instance'>\nObject <strong>CSON.load</strong>(filePath, opts?, next?)\n</a> <br/> Parses a file path of the desired format into an <a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object'>Object</a> If the format option is not specified, we use the filename to detect what it should be, otherwise we default to CSON\n\n- <a href='http://rawgit.com/bevry/cson/master/docs/classes/CSON.html#parseFile-instance'>\nObject <strong>CSON.parseFile</strong>(filePath, opts?, next?)\n</a> <br/> Parses a file path of the desired format into an <a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object'>Object</a> If the format option is not specified, we use the filename to detect what it should be, otherwise we default to CSON\n\n- <a href='http://rawgit.com/bevry/cson/master/docs/classes/CSON.html#parseCSONFile-instance'>\nObject <strong>CSON.parseCSONFile</strong>(filePath, opts?, next?)\n</a> <br/> Parses a CSON file into an <a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object'>Object</a>\n\n- <a href='http://rawgit.com/bevry/cson/master/docs/classes/CSON.html#parseJSONFile-instance'>\nObject <strong>CSON.parseJSONFile</strong>(filePath, opts?, next?)\n</a> <br/> Parses a JSON file into an <a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object'>Object</a>\n\n- <a href='http://rawgit.com/bevry/cson/master/docs/classes/CSON.html#parseCSFile-instance'>\nObject <strong>CSON.parseCSFile</strong>(filePath, opts?, next?)\n</a> <br/> Parses a CoffeeScript file into an <a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object'>Object</a>\n\n- <a href='http://rawgit.com/bevry/cson/master/docs/classes/CSON.html#parseJSFile-instance'>\nObject <strong>CSON.parseJSFile</strong>(filePath, opts?, next?)\n</a> <br/> Parses a JavaScript file into an <a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object'>Object</a>\n\n### Require Files\n\n- <a href='http://rawgit.com/bevry/cson/master/docs/classes/CSON.html#requireFile-instance'>\nObject <strong>CSON.requireFile</strong>(filePath, opts?, next?)\n</a> <br/> Requires or parses a file path of the desired format into an <a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object'>Object</a> If the format option is not specified, we use the filename to detect what it should be, otherwise we default to CSON\n\n- <a href='http://rawgit.com/bevry/cson/master/docs/classes/CSON.html#requireCSFile-instance'>\nObject <strong>CSON.requireCSFile</strong>(filePath, opts?, next?)\n</a> <br/> Requires a CoffeeScript file and returns the result <a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object'>Object</a>\n\n- <a href='http://rawgit.com/bevry/cson/master/docs/classes/CSON.html#requireJSFile-instance'>\nObject <strong>CSON.requireJSFile</strong>(filePath, opts?, next?)\n</a> <br/> Requires a JavaScript file and returns the result <a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object'>Object</a>\n\n\n<!-- HISTORY/ -->\n\n## History\n[Discover the change history by heading on over to the `HISTORY.md` file.](https://github.com/bevry/cson/blob/master/HISTORY.md#files)\n\n<!-- /HISTORY -->\n\n\n<!-- CONTRIBUTE/ -->\n\n## Contribute\n\n[Discover how you can contribute by heading on over to the `CONTRIBUTING.md` file.](https://github.com/bevry/cson/blob/master/CONTRIBUTING.md#files)\n\n<!-- /CONTRIBUTE -->\n\n\n<!-- BACKERS/ -->\n\n## Backers\n\n### Maintainers\n\nThese amazing people are maintaining this project:\n\n- Benjamin Lupton <b@lupton.cc> (https://github.com/balupton)\n\n### Sponsors\n\nNo sponsors yet! Will you be the first?\n\n[![Gratipay donate button](https://img.shields.io/gratipay/bevry.svg)](https://www.gratipay.com/bevry/ \"Donate weekly to this project using Gratipay\")\n[![Flattr donate button](https://img.shields.io/badge/flattr-donate-yellow.svg)](http://flattr.com/thing/344188/balupton-on-Flattr \"Donate monthly to this project using Flattr\")\n[![PayPayl donate button](https://img.shields.io/badge/paypal-donate-yellow.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=QB8GQPZAH84N6 \"Donate once-off to this project using Paypal\")\n[![BitCoin donate button](https://img.shields.io/badge/bitcoin-donate-yellow.svg)](https://coinbase.com/checkouts/9ef59f5479eec1d97d63382c9ebcb93a \"Donate once-off to this project using BitCoin\")\n[![Wishlist browse button](https://img.shields.io/badge/wishlist-donate-yellow.svg)](http://amzn.com/w/2F8TXKSNAFG4V \"Buy an item on our wishlist for us\")\n\n### Contributors\n\nThese amazing people have contributed code to this project:\n\n- [attilaolah](https://github.com/attilaolah) — [view contributions](https://github.com/bevry/cson/commits?author=attilaolah)\n- [Benjamin Lupton](https://github.com/balupton) <b@lupton.cc> — [view contributions](https://github.com/bevry/cson/commits?author=balupton)\n- [evinugur](https://github.com/evinugur) — [view contributions](https://github.com/bevry/cson/commits?author=evinugur)\n- [jasonkarns](https://github.com/jasonkarns) — [view contributions](https://github.com/bevry/cson/commits?author=jasonkarns)\n- [Joel Perras](https://github.com/jperras) <joel.perras@gmail.com> — [view contributions](https://github.com/bevry/cson/commits?author=jperras)\n- [Linus G Thiel](https://github.com/linus) <linus@hanssonlarsson.se> — [view contributions](https://github.com/bevry/cson/commits?author=linus)\n- [nanuclickity](https://github.com/nanuclickity) — [view contributions](https://github.com/bevry/cson/commits?author=nanuclickity)\n- [Nicolae Claudius](https://github.com/clyfe) <claudius.nicolae@gmail.com> — [view contributions](https://github.com/bevry/cson/commits?author=clyfe)\n- [RobLoach](https://github.com/RobLoach) — [view contributions](https://github.com/bevry/cson/commits?author=RobLoach)\n- [Ryan LeFevre](https://github.com/meltingice) <meltingice8917@gmail.com> — [view contributions](https://github.com/bevry/cson/commits?author=meltingice)\n- [Zearin](https://github.com/Zearin) — [view contributions](https://github.com/bevry/cson/commits?author=Zearin)\n- [Zhang Cheng](https://github.com/zhangcheng) <czhang.oss@gmail.com> — [view contributions](https://github.com/bevry/cson/commits?author=zhangcheng)\n\n[Become a contributor!](https://github.com/bevry/cson/blob/master/CONTRIBUTING.md#files)\n\n<!-- /BACKERS -->\n\n\n<!-- LICENSE/ -->\n\n## License\n\nUnless stated otherwise all works are:\n\n- Copyright &copy; 2012+ Bevry Pty Ltd <us@bevry.me> (http://bevry.me)\n- Copyright &copy; 2011 Benjamin Lupton <b@lupton.cc> (http://balupton.com)\n\nand licensed under:\n\n- The incredibly [permissive](http://en.wikipedia.org/wiki/Permissive_free_software_licence) [MIT License](http://opensource.org/licenses/mit-license.php)\n\n<!-- /LICENSE -->\n\n\n",
  "readmeFilename": "README.md",
  "_id": "cson@3.0.1",
  "_from": "cson@>=3.0.1 <4.0.0"
}
